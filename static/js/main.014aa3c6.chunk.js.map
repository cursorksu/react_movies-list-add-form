{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","inputs","id","v4","substr","label","NewMovie","state","newMovie","errorMassage","handleChange","e","name","value","target","setState","prev","handleValidation","pattern","test","reset","onAdd","this","props","onSubmit","func","item","htmlFor","onBlur","onChange","type","disabled","Object","values","some","Component","App","moviesFromServer","addMovie","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.014aa3c6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport PropTypes from 'prop-types';\nimport { v4 } from 'uuid';\n\nconst inputs = [\n  {\n    id: v4().substr(0, 3), label: 'title',\n  },\n  {\n    id: v4().substr(0, 3), label: 'description',\n  },\n  {\n    id: v4().substr(0, 3), label: 'imgUrl',\n  },\n  {\n    id: v4().substr(0, 3), label: 'imdbUrl',\n  },\n  {\n    id: v4().substr(0, 3), label: 'imdbId',\n  },\n];\n\nexport class NewMovie extends Component {\n  state = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errorMassage: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  handleChange = (e, name) => {\n    const { value } = e.target;\n\n    const movie = {\n      ...this.state.newMovie,\n      [name]: value,\n    };\n\n    this.setState(prev => ({\n      newMovie: movie,\n      errorMassage: {\n        ...prev.errorMassage,\n        [name]: false,\n      },\n    }));\n  };\n\n  handleValidation = (name) => {\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (this.state.newMovie[name] === '') {\n      this.setState(prev => ({\n        errorMassage: {\n          ...prev.errorMassage,\n          [name]: true,\n        },\n      }));\n    }\n\n    if (!pattern.test(this.state.newMovie.imgUrl)) {\n      this.setState(prev => ({\n        errorMassage: {\n          ...prev.errorMassage,\n          imgUrl: true,\n        },\n      }));\n    }\n\n    if (!pattern.test(this.state.newMovie.imdbUrl)) {\n      this.setState(prev => ({\n        errorMassage: {\n          ...prev.errorMassage,\n          imdbUrl: true,\n        },\n      }));\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  };\n\n  render() {\n    const { onAdd } = this.props;\n    const { newMovie, errorMassage } = this.state;\n\n    return (\n      <form\n        onSubmit={(e,\n          movie,\n          func) => onAdd(e, newMovie, this.reset)}\n      >\n        {inputs.map(item => (\n          <div key={item.id} className=\"form-group\">\n            <label\n              htmlFor={item.label}\n              className=\"form-label\"\n            >\n              {item.label}\n            </label>\n            <input\n              onBlur={name => this.handleValidation(item.label)}\n              onChange={(e, name) => this.handleChange(e, item.label)}\n              name={item.label}\n              type=\"text\"\n              className=\"form-control\"\n              id={item.label}\n              value={this.state.newMovie[item.label]}\n            />\n            {errorMassage[item.label]\n            && (\n              <span className=\"badge badge-pill badge-danger\">\n              not valid value\n              </span>\n            )\n            }\n          </div>\n        ))\n        }\n        <div className=\"form-group\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success\"\n            disabled={Object.values(errorMassage).some(value => value === true)}\n          >\n            Add muvie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (e, movie, func) => {\n    e.preventDefault();\n    this.setState(prev => ({\n      movies: [\n        ...prev.movies,\n        movie,\n      ],\n    }));\n    func();\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h2 className=\"subtitle\">Add movie form</h2>\n          <NewMovie onAdd={(e, movie, func) => this.addMovie(e, movie, func)} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}